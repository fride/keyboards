// generated
uint16_t get_combo_term(uint16_t index, combo_t *combo) {
    switch (index) {
        case combo_reset:
   return COMBO_TERM + 10;

case combo_l_R:
   return COMBO_TERM + 50;

case combo_l_gt:
   return COMBO_TERM + 50;

case combo_l_S:
   return COMBO_TERM + 50;

case combo_l_paran:
   return COMBO_TERM + 50;

case combo_l_N:
   return COMBO_TERM + 50;

case combo_l_rbr:
   return COMBO_TERM + 50;

case combo_l_I:
   return COMBO_TERM + 50;

case combo_l_r_paren:
   return COMBO_TERM + 50;

case combo_l_A:
   return COMBO_TERM + 50;

case combo_l_lt:
   return COMBO_TERM + 50;

case combo_l_O:
   return COMBO_TERM + 50;

case combo_l_l_paran:
   return COMBO_TERM + 50;

case combo_l_T:
   return COMBO_TERM + 50;

case combo_l_lbr:
   return COMBO_TERM + 50;

case combo_l_E:
   return COMBO_TERM + 50;

case combo_l_l_paren:
   return COMBO_TERM + 50;

case combo_l_b:
   return COMBO_TERM + 50;

case combo_l_B:
   return COMBO_TERM + 50;

case combo_9:
   return COMBO_TERM + 50;

case combo_l_y:
   return COMBO_TERM + 10;

case combo_l_Y:
   return COMBO_TERM + 10;

case combo_5:
   return COMBO_TERM + 10;

case combo_l_l:
   return COMBO_TERM + 50;

case combo_l_L:
   return COMBO_TERM + 50;

case combo_l_4:
   return COMBO_TERM + 50;

case combo_l_h:
   return COMBO_TERM + 10;

case combo_l_H:
   return COMBO_TERM + 10;

case combo_l_zero:
   return COMBO_TERM + 10;

case combo_l_p:
   return COMBO_TERM + 10;

case combo_l_u:
   return COMBO_TERM + 10;

case combo_l_g:
   return COMBO_TERM + 50;

case combo_l_z:
   return COMBO_TERM + 50;

case combo_l_f:
   return COMBO_TERM + 50;

case combo_l_q:
   return COMBO_TERM + 50;

case combo_l_c:
   return COMBO_TERM + 50;

case combo_l_x:
   return COMBO_TERM + 50;

case combo_l_k:
   return COMBO_TERM + 50;

case combo_l_v:
   return COMBO_TERM + 50;

case combo_l_j_old:
   return COMBO_TERM + 10;

case combo_l_j:
   return COMBO_TERM + 10;

case combo_l_J:
   return COMBO_TERM + 10;

case combo_l_m:
   return COMBO_TERM + 50;

case combo_l_w:
   return COMBO_TERM + 50;

case combo_l_slash:
   return COMBO_TERM + 50;

case combo_l_mins:
   return COMBO_TERM + 50;

case combo_l_scln:
   return COMBO_TERM + 50;

case combo_l_ques:
   return COMBO_TERM + 50;

case combo_l_comm:
   return COMBO_TERM + 50;

case combo_l_dot:
   return COMBO_TERM + 50;

case combo_l_grv:
   return COMBO_TERM + 50;

case combo_l_quot:
   return COMBO_TERM + 50;

case combo_l_enter:
   return COMBO_TERM + 10;

case combo_l_esc:
   return COMBO_TERM + 10;

case combo_l_tab:
   return COMBO_TERM + 10;

case combo_l_bspc:
   return COMBO_TERM + 10;

case combo_shift:
   return COMBO_TERM + 10;

case combo_right:
   return COMBO_TERM + 10;

case combo_alt:
   return COMBO_TERM + 10;

case combo_down:
   return COMBO_TERM + 10;

case combo_ctrl:
   return COMBO_TERM + 10;

case combo_up:
   return COMBO_TERM + 10;

case combo_gui:
   return COMBO_TERM + 10;

case combo_left:
   return COMBO_TERM + 10;

        default:
            return COMBO_TERM + 25;
    }
}
